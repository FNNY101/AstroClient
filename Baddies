-- Load Fluent and setup
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

-- Create the Fluent window
local Window = Fluent:CreateWindow({
    Title = "AstroClient-Baddies",
    SubTitle = "Made by Finny<3",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.RightControl
})

-- Create tabs
local Tabs = {
    Main = Window:AddTab({ Title = "Main" }),
    Visuals = Window:AddTab({ Title = "Visuals" }), -- Added Visuals Tab
    Settings = Window:AddTab({ Title = "Settings" }) -- Added Settings Tab
}

-- Initialize toggles
local autofarmEnabled = false
local cashAuraEnabled = false
local boxESPEnabled = false
local healthESPEnabled = false

local AutofarmToggle = Tabs.Main:AddToggle("AutofarmToggle", {
    Title = "Autofarm (Enable Punch before toggling)",
    Default = false
})

local CashAuraToggle = Tabs.Main:AddToggle("CashAuraToggle", {
    Title = "CashAura",
    Default = false, -- Set default to false
    Callback = function(value)
        cashAuraEnabled = value
        getgenv().cashAura = cashAuraEnabled

        if cashAuraEnabled then
            startCashAura()
        end
    end
})

-- Visuals Tab Toggles
local BoxToggle = Tabs.Visuals:AddToggle("BoxESP", {
    Title = "Box ESP",
    Default = true,
    Callback = function(value)
        boxESPEnabled = value
        updateESP()
    end
})

local HealthToggle = Tabs.Visuals:AddToggle("HealthESP", {
    Title = "Health ESP",
    Default = true,
    Callback = function(value)
        healthESPEnabled = value
        updateESP()
    end
})

-- Autofarm functionality
local function startAutofarm()
    local plr = game.Players.LocalPlayer
    local cash = workspace:FindFirstChild("Cash")
    local dmg = workspace:FindFirstChild("Damageables")

    if not cash or not dmg then
        warn("Cash or Damageables folder not found in the workspace.")
        return
    end

    -- Prevent player from being idled
    for _, v in next, getconnections(plr.Idled) do
        v:Disable()
    end

    -- Function to pick up cash
    local function getMoney()
        local cashPickedUp = false
        for _, m in pairs(cash:GetChildren()) do
            if m.Name == "Cash" and (m.Position - plr.Character.HumanoidRootPart.Position).Magnitude <= 300 then
                cashPickedUp = true
                plr.Character.HumanoidRootPart.CFrame = m.CFrame
                fireproximityprompt(m.ProximityPrompt, 6)
                task.wait(0.1) -- Increased delay for picking up cash
            end
        end
        return cashPickedUp
    end

    -- Main autofarm loop
    while getgenv().farm do
        pcall(function()
            for _, a in ipairs(dmg:GetChildren()) do
                if not getgenv().farm then break end
                if a:FindFirstChild("Damageable") and a.Damageable.Value > 0 and a.Name ~= "CashRegister" then
                    -- Teleport to 3 studs above the ATM
                    plr.Character.HumanoidRootPart.CFrame = a.Screen.CFrame * CFrame.new(0, 3, 2)
                    task.wait(1)

                    -- Break the ATM
                    repeat
                        if not getgenv().farm then break end
                        plr.Character.HumanoidRootPart.CFrame = a.Screen.CFrame * CFrame.new(0, 3, 2)
                        game:GetService("ReplicatedStorage"):WaitForChild("PUNCHEVENT"):FireServer(1)
                        task.wait(0.5)
                    until a.Damageable.Value <= 0

                    -- Ensure all cash is picked up before moving to the next ATM
                    local endTime = tick() + 2
                    local cashPickedUp
                    repeat
                        if not getgenv().farm then break end
                        cashPickedUp = getMoney()
                        task.wait(0.1) -- Increased delay for picking up cash
                    until tick() >= endTime and not cashPickedUp

                    -- Move to next ATM if no cash was picked up
                    if not cashPickedUp then
                        task.wait(0.5)
                    end
                end
            end
        end)
        task.wait(1)
    end
end

-- CashAura functionality
local function startCashAura()
    local plr = game.Players.LocalPlayer
    local cash = workspace:FindFirstChild("Cash")

    if not cash then
        warn("Cash folder not found in the workspace.")
        return
    end

    -- Function to pick up cash
    local function getMoney()
        local cashPickedUp = false
        for _, m in pairs(cash:GetChildren()) do
            if m.Name == "Cash" and (m.Position - plr.Character.HumanoidRootPart.Position).Magnitude <= 300 then
                cashPickedUp = true
                fireproximityprompt(m.ProximityPrompt, 6)
                task.wait(0.1) -- Increased delay for picking up cash
            end
        end
        return cashPickedUp
    end

    -- Main cash aura loop
    while getgenv().cashAura do
        pcall(function()
            getMoney()
            task.wait(1) -- Check every 1 second
        end)
        task.wait(1)
    end
end

-- Toggle actions
AutofarmToggle:OnChanged(function(value)
    autofarmEnabled = value
    getgenv().farm = autofarmEnabled

    if autofarmEnabled then
        startAutofarm()
    end
end)

-- ESP Configuration Table
local Config = {
    -- Box Settings
    Box               = true, -- Enable or disable the box around players
    BoxColor          = Color3.fromRGB(255, 255, 255), -- Color of the box border (white)
    BoxThickness      = 1, -- Thickness of the box border
    
    -- Box Outline Settings
    BoxOutline        = true, -- Enable or disable the box outline
    BoxOutlineColor   = Color3.fromRGB(255, 255, 255), -- Color of the box outline (white)
    BoxOutlineThickness = 1, -- Thickness of the box outline border
    
    -- Health Bar Settings
    HealthBar         = true, -- Enable or disable the health bar
    HealthBarSide     = "Left", -- Side of the box where the health bar appears ("Left", "Bottom", "Right")
    
    -- Name Display Settings
    Names             = true, -- Enable or disable the name display
    NamesColor        = Color3.fromRGB(255, 255, 255), -- Color of the name text (white)
    NamesOutline      = true, -- Enable or disable the outline around the name text
    NamesOutlineColor = Color3.fromRGB(0, 0, 0), -- Color of the name text outline (black)
    NamesFont         = 2, -- Font style (0: SciFi, 1: System, 2: Parchment, 3: SourceSans)
    NamesSize         = 13, -- Size of the name text
}

-- Function to Create ESP for a Player
local function CreateEsp(Player)
    -- Create Drawing objects for ESP elements
    local Box = Drawing.new("Square")
    local BoxOutline = Drawing.new("Square")
    local Name = Drawing.new("Text")
    local HealthBar = Drawing.new("Square")
    
    -- Initial configuration for ESP elements
    Box.Filled = false -- Transparent inside
    Box.Color = Config.BoxColor
    Box.Thickness = Config.BoxThickness
    Box.ZIndex = 69
    
    BoxOutline.Filled = false -- Transparent outline fill
    BoxOutline.Color = Config.BoxOutlineColor
    BoxOutline.Thickness = Config.BoxOutlineThickness
    BoxOutline.ZIndex = 68 -- Ensure it's behind the Box
    BoxOutline.Visible = Config.BoxOutline
    
    Name.Visible = false
    Name.Center = true
    Name.Color = Config.NamesColor
    Name.Font = Config.NamesFont
    Name.Size = Config.NamesSize
    Name.Outline = Config.NamesOutline
    Name.OutlineColor = Config.NamesOutlineColor
    Name.ZIndex = 69
    
    HealthBar.Filled = true
    HealthBar.Color = Color3.fromRGB(0, 255, 0) -- Initial color (green)
    HealthBar.ZIndex = 70
    
    -- Connect to player updates
    local Updater = game:GetService("RunService").RenderStepped:Connect(function()
        if Player.Character and Player.Character:FindFirstChild("Humanoid") and Player.Character:FindFirstChild("HumanoidRootPart") and Player.Character:FindFirstChild("Head") and Player.Character.Humanoid.Health > 0 then
            local Humanoid = Player.Character.Humanoid
            local HRP = Player.Character.HumanoidRootPart
            local Camera = workspace.CurrentCamera
            
            -- Get the 2D position and visibility of the HumanoidRootPart
            local Target2dPosition, IsVisible = Camera:WorldToViewportPoint(HRP.Position)
            
            -- Calculate scale factor based on distance
            local scale_factor = 1 / (Target2dPosition.Z * math.tan(math.rad(Camera.FieldOfView * 0.5)) * 2) * 100
            local width, height = math.floor(30 * scale_factor), math.floor(45 * scale_factor) -- Adjust box size
            
            -- Update Box ESP
            if boxESPEnabled then
                Box.Visible = IsVisible
                Box.Size = Vector2.new(width, height)
                Box.Position = Vector2.new(Target2dPosition.X - Box.Size.X / 2, Target2dPosition.Y - Box.Size.Y / 2)
            else
                Box.Visible = false
            end
            
            -- Update Box Outline
            if Config.BoxOutline then
                BoxOutline.Visible = IsVisible
                BoxOutline.Size = Vector2.new(width, height)
                BoxOutline.Position = Vector2.new(Target2dPosition.X - BoxOutline.Size.X / 2, Target2dPosition.Y - BoxOutline.Size.Y / 2)
            else
                BoxOutline.Visible = false
            end
            
            -- Update Health Bar ESP
            if healthESPEnabled then
                HealthBar.Visible = IsVisible
                
                -- Set Health Bar Size and Position based on the side
                local barWidth = Config.BoxThickness -- Health bar width matches the box thickness
                local barHeight = height * (Humanoid.Health / Humanoid.MaxHealth) -- Full height of the ESP box
                
                if Config.HealthBarSide == "Left" then
                    HealthBar.Size = Vector2.new(barWidth, barHeight)
                    HealthBar.Position = Vector2.new(Target2dPosition.X - width / 2 - barWidth - 2, Target2dPosition.Y + height / 2 - barHeight - 1) -- Position adjusted slightly down
                elseif Config.HealthBarSide == "Bottom" then
                    HealthBar.Size = Vector2.new(width - 6, 2)
                    HealthBar.Position = Vector2.new(Target2dPosition.X - width / 2 + 3, Target2dPosition.Y + height / 2 + 5)
                end
                
                -- Set Health Bar Color (Red to Green)
                local healthPercent = Humanoid.Health / Humanoid.MaxHealth
                HealthBar.Color = Color3.fromRGB(255, 0, 0):lerp(Color3.fromRGB(0, 255, 0), healthPercent)
            else
                HealthBar.Visible = false
            end
            
            -- Update Name Display ESP
            if Config.Names then
                Name.Visible = IsVisible
                Name.Text = Player.Name.." "..math.floor((Camera.CFrame.p - HRP.Position).magnitude).."m"
                Name.Position = Vector2.new(Target2dPosition.X, Target2dPosition.Y - height * 0.5 - 15)
            else
                Name.Visible = false
            end
            
        else
            Box.Visible = false
            BoxOutline.Visible = false
            Name.Visible = false
            HealthBar.Visible = false
            if not Player then
                Box:Remove()
                BoxOutline:Remove()
                Name:Remove()
                HealthBar:Remove()
                Updater:Disconnect()
            end
        end
    end)
end

-- Create ESP for all players
for _, v in pairs(game:GetService("Players"):GetPlayers()) do
    if v ~= game:GetService("Players").LocalPlayer then
        CreateEsp(v)
        v.CharacterAdded:Connect(function()
            CreateEsp(v)
        end)
    end
end

-- Function to update ESP based on toggles
local function updateESP()
    for _, v in pairs(game:GetService("Players"):GetPlayers()) do
        if v ~= game:GetService("Players").LocalPlayer then
            CreateEsp(v)
        end
    end
end

-- Ensure all GUI elements are updated
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")
InterfaceManager:BuildInterfaceSection(Tabs.Settings) -- Added settings section
SaveManager:BuildConfigSection(Tabs.Settings) -- Added config section
Window:SelectTab(1)
SaveManager:LoadAutoloadConfig()